<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<name>net.sf.orcc</name>
	<groupId>net.sf.orcc</groupId>
	<artifactId>net.sf.orcc</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<xtend-version>2.12.0</xtend-version>
		<tycho-version>0.26.0</tycho-version>
	</properties>

	<repositories>
		<repository>
			<id>eclipse</id>
			<layout>p2</layout>
			<url>http://download.eclipse.org/releases/neon/201606221000</url>
		</repository>
		<repository>
			<id>xtext</id>
			<layout>p2</layout>
			<url>http://download.eclipse.org/modeling/tmf/xtext/updates/releases/2.12.0/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>



	<build>
		<!-- ${basedir} is an environment variable which points to the directory 
			of the currently compiled module defined above -->
		<sourceDirectory>${basedir}/src</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho-version}</version>
				<extensions>true</extensions>
				<configuration>
					<pomDependencies>consider</pomDependencies>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<environments>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>
			<!-- register the directories src-gen and xtend-gen inside the project 
				folder as source directories -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${basedir}/src-gen</source>
								<source>${basedir}/xtend-gen</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- clean output directories -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>auto-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<directory>${basedir}/xtend-gen</directory>
									<includes>
										<include>**</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${basedir}/src-gen</directory>
									<includes>
										<include>**</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>**</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.xtend</groupId>
				<artifactId>xtend-maven-plugin</artifactId>
				<version>${xtend-version}</version>
				<executions>
					<execution>
						<!-- the phase "generate-resources" is obviously wrong for compiling 
							Xtend to Java, but it is the only way that the MWE2 workflow is executed 
							*before* the Xtend compiler is triggered. It is not possible to define orders 
							for plug-ins in the same phase -->
						<phase>generate-resources</phase>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/xtend-gen</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<modules>
		<module>net.sf.orcc.cal.grammar</module>
		<module>net.sf.orcc.models</module>
		<module>net.sf.orcc.core</module>
		<module>net.sf.orcc.simulators</module>
		<module>net.sf.orcc.backends</module>
		<module>net.sf.orcc.cal</module>
		<module>net.sf.orcc.cal.ui</module>
		<module>net.sf.orcc.cal.tests</module>
		<module>net.sf.orcc.ui</module>
		<module>net.sf.orcc.xdf.ui</module>
		<module>../features/net.sf.orcc</module>
		<module>net.sf.orcc.site</module>
	</modules>
</project>
